---
- name: install emacs nano  on RHEL based distros
  #need to extend with version support
  yum:
    name: 
      - vim
      - emacs 
      - nano
      - git
      - python36
      - python36-root
      - root
      - xeyes
      - xauth
      - wget
  register: install_yum_repo

- name: update alternatives install
  command:
     update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1
  when: install_yum_repo
  registr: update_alternatives_install

- name: update alternatives set python3.6
  command: 
     update-alternatives  --set python /usr/bin/python3.6
  when: update_alternatives_install

- name: add the magic cookie
  shell: xauth add :0 . `mcookie`

- name: add the magic cookie
  shell: xauth add :0 . `mcookie`
  become_user: "{{ ml_user }}"

- name: install cvmfs repo
  yum:
    name: 'https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest.noarch.rpm' 
    state: present
  register: install_cvmfs_repo
  
- name: Install cvmfs packages
  yum:
    name:
      - cvmfs
      - cvmfs-config-default
    update_cache: yes
    state: present
  register: install_cvmfs_packages

- name: create/update file /etc/cvmfs/default.local
  blockinfile:
    dest: /etc/cvmfs/default.local
    create: yes
    content: |
      CVMFS_HTTP_PROXY=DIRECT
      CVMFS_REPOSITORIES='{% for item in cvmfs_repositories %}{{item}}{% if not loop.last %},{% endif %}{% endfor %}' 
  register: install_cvmfs_packages

- name: Creates CVMFS mountpoint for repos
  file:
     path=/cvmfs/{{item}}
     state=directory 
     owner=cvmfs 
     group=cvmfs 
     recurse=yes
  with_items: "{{ cvmfs_repositories }}"

- name: 
     mount CVMFS {{item}}
  command:
     mount -t cvmfs {{ item }} /cvmfs/{{ item }}
  with_items: "{{ cvmfs_repositories }}"
  register: result
  until: result | success
  retries: 10
  delay: 10

- name: Download file and force basic auth
  get_url:
    url: "{{ ml_test_url }}"
    dest: $HOME 
    force_basic_auth: yes
  become_user: "{{ ml_user }}"

- name: Launch jupyter notebook
    shell: cd $HOME/notebooks && $HOME/.local/bin/jupyter notebook --no-browser --ip 0.0.0.0 --port {{ jupyter_port }}> $HOME/log_jupyter.txt &
    become: true
  become_user: "{{ ml_user }}"
